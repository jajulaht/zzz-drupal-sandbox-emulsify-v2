// .user-menu {
//   @include list-reset;
// }

// .user-menu__item {
//   margin: 0 1em 0.5em 0;

//   @include large {
//     display: inline;
//     margin-bottom: 1em;
//   }

//   &:last-child {
//     margin-right: 0;
//   }
// }

// .user-menu__link {
//   @include link;

//   font-size: 0.75rem;
//   font-weight: 400;
//   letter-spacing: 1.5px;
//   text-decoration: none;
//   text-transform: uppercase;
// }

.user-menu {
  @include list-reset;
}

.user-menu__link {
  text-decoration: none;
  color: clr(text-inverse);
}

// Sass map to define colors. Each set should have a "Dark" variation when required.
// e.g. `default` and `default-dark`. Or `purple` and `purple-dark`.
$button-colors: (
  primary: (
    text: clr(text-inverse),
    bg: clr(primary),
    text-hover: clr(text-inverse),
    bg-hover: clr(highlight),
  ),
  primary-dark: (
    text: clr(text),
    bg: clr(primary),
    text-hover: clr(text),
    bg-hover: clr(highlight-high),
  ),
  secondary: (
    text: clr(text-inverse),
    bg: clr(secondary),
    text-hover: clr(secondary),
    bg-hover: clr(highlight),
  ),
  secondary-dark: (
    text: clr(text),
    bg: clr(secondary),
    text-hover: clr(text),
    bg-hover: clr(highlight-high),
  ),
);

// Mixin to define colors for one or more schemes.
// Simply pass the color scheme to the mixin to get the colors defined in the map.
// e.g. @include buttonColors(default) will get all of the colors defined in the "default" section.
@mixin buttonColors(
  $scheme,
  $pallate: map-get($button-colors, $scheme),
  $map: $button-colors
) {
  color: map-get($pallate, text);
  background-color: map-get($pallate, bg);

  &:visited {
    color: map-get($pallate, text);
  }

  &:hover {
    color: map-get($pallate, text-hover);
    background-color: map-get($pallate, bg-hover);
  }
}

// The button-base mixin contains styles that apply to all buttons
// regardless of color or size.
@mixin button-base {
  border: none;
  cursor: pointer;
  display: inline-block;
  text-decoration: none;
  text-align: center;
  text-transform: uppercase;
  border-radius: 0.2rem;
  font-weight: 600;
  letter-spacing: 0.1rem;
  font-size: 0.9rem;
}

// Button color variations
// Note how we include dark mode options for each
@mixin button-color-primary {
  @include buttonColors(primary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(primary-dark);
  }
}

@mixin button-color-secondary {
  @include buttonColors(secondary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(secondary-dark);
  }
}

// Button size variations
@mixin button-medium {
  line-height: 1.4;
  padding: $space-one-half $space;
}

@mixin button-large {
  line-height: 2;
  padding: $space $space-double;
}

.user-menu__item {
  @include button-base;
  @include button-color-primary;
  @include button-medium;

  &--alt {
    @include button-color-secondary;
    @include button-large;
  }
}

.user-menu__item + .user-menu__item {
  margin-left: 1rem;
}
