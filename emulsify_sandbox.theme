<?php

/**
 * @file
 * Functions to support theming.
 */
use Drupal\config_pages\Entity\ConfigPages;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\media\Entity\Media;
use Drupal\file\Entity\File;
use Drupal\Core\Entity\ContentEntityInterface;


/**
 * Prepare link to the logo image
 */
function emulsify_sandbox_preprocess_block(&$variables) {
  $host = \Drupal::request()->getSchemeAndHttpHost();
  $variables['logo_path'] = $host . "/themes/custom/emulsify_sandbox/images/logo.png";
}

/**
 * Prepares variables for footer region.
 *
 * Default template: region--footer.html.twig
 */
function emulsify_sandbox_preprocess_region__footer(&$variables) {
  // Facebook
  $facebook_data = ConfigPages::config('facebook');
  $fb_link_field = $facebook_data->get('field_facebook_link');
  $facebook = [
    "title" => $fb_link_field[0]->get('title')->getValue(),
    "url" => $fb_link_field[0]->get('uri')->getValue(),
    "icon" => $facebook_data->get('field_facebook_icon')->value,
  ];
  // Twitter
  $twitter_data = ConfigPages::config('twitter');
  $twitter_link_field = $twitter_data->get('field_facebook_link');
  $twitter = [
    "title" => $twitter_link_field[0]->get('title')->getValue(),
    "url" => $twitter_link_field[0]->get('uri')->getValue(),
    "icon" => $twitter_data->get('field_facebook_icon')->value,
  ];
  // Instagram
  $instagram_data = ConfigPages::config('instagram');
  $insta_link_field = $instagram_data->get('field_facebook_link');
  $instagram = [
    "title" => $insta_link_field[0]->get('title')->getValue(),
    "url" => $insta_link_field[0]->get('uri')->getValue(),
    "icon" => $instagram_data->get('field_facebook_icon')->value,
  ];
  // Compile array of channels
  $channels = [
    $facebook, 
    $twitter,
    $instagram,
  ];
  $variables['some_channels'] = $channels;
}

/**
 * Constructs media field for liftups.
 *
 * @param \Drupal\Core\Field\FieldItemListInterface $image_field
 *   Node's image field.
 * @param string $view_mode_machine_name
 *   String of the wanted media view mode.
 * @return array $media_render_array
 *   Rendered media array with view mode.
 */
function _emulsify_sandbox_construct_node_media_field($field_media, $view_mode_machine_name) {

  if ($field_media !== NULL) {
    $media_entities = $field_media->referencedEntities();
    $media_entity = reset($media_entities);
    $media_render_array = \Drupal::entityTypeManager()->getViewBuilder('media')->view($media_entity, $view_mode_machine_name);

    return $media_render_array;
  }
  else {
    return NULL;
  }
}

/**
 * Prepares variables for the hero paragraph with text and image sides.
 *
 * Default template: paragraph--hero-50-50-text-image--default.html.twig.
 */
function emulsify_sandbox_preprocess_paragraph__hero_50_50_text_image__default(&$variables) {
  $paragraph = $variables['paragraph'];
  
  // Text part of hero
  $text_field = $paragraph->get('field_text_content')->entity;
  $field_hero_buttons = $text_field->get('field_hero_button');
  $field_hero_title = $text_field->get('field_hero_title')[0]->value;
  $field_hero_text = $text_field->get('field_hero_text')[0]->value;

  // Get image
  $img_field = $paragraph->get('field_hero_image_media');
  $node = $img_field->entity;
  $field_media = $node->get('field_media_image');
  $item_image = _emulsify_sandbox_construct_node_media_field($field_media, 'hero_image');

  $image_alt = $field_media[0]->get('alt')->getValue();

  // Buttons array
  $buttons = $field_hero_buttons;
  $buttons_data = [];
  foreach ($buttons as $btn) {
    $btn_data = [
      "title" => $btn->get('title')->getValue(),
      "url" => $btn->get('uri')->getValue(),
    ];
    array_push($buttons_data, $btn_data);
  }
  // Collect all fields
  $p_fields = [
    "hero_image" => $item_image,
    "hero_text" => [
      "hero_title_content" => $field_hero_title,
      "hero_text_content" => $field_hero_text,
      "hero_buttons" => $buttons_data,
    ],
  ];
  $variables['hero_paragraph_fields'] = $p_fields;
}